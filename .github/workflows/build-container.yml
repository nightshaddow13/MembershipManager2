name: Build Container
permissions:
  packages: write
  contents: write
on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches:
      - main
      - master
      - 48-update-deployment-pipeline
  workflow_dispatch:

# Only update envs here if you need to change them for this workflow
env:
  DOCKER_BUILDKIT: 1
  KAMAL_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  KAMAL_REGISTRY_USERNAME: ${{ github.actor }}

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from Git tag
        id: extract_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.1.0")
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Pack NuGet package
        run: dotnet pack -c Release -p:PackageVersion=${{ env.VERSION }}

      - name: Push NuGet package
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./bin/Release/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.KAMAL_REGISTRY_USERNAME }}
          password: ${{ env.KAMAL_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          dotnet publish --os linux --arch x64 -c Release \
            -p:ContainerRepository=${{ env.image_repository_name }} \
            -p:ContainerRegistry=ghcr.io \
            -p:ContainerImageTags=${{ env.VERSION }} \
            -p:ContainerPort=80

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Azure App Service to use new image tag
        run: |
          az webapp config container set \
            --name <your-app-service-name> \
            --resource-group <your-resource-group> \
            --docker-custom-image-name ghcr.io/${{ env.image_repository_name }}:${{ env.VERSION }}
